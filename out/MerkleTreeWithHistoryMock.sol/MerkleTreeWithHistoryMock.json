{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_treeLevels",
          "type": "uint32"
        },
        {
          "internalType": "contract IHasher",
          "name": "_hasher",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FIELD_SIZE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROOT_HISTORY_SIZE",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZERO_VALUE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentRootIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "filledSubtrees",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IHasher",
          "name": "_hasher",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_left",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_right",
          "type": "bytes32"
        }
      ],
      "name": "hashLeftRight",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasher",
      "outputs": [
        {
          "internalType": "contract IHasher",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_leaf",
          "type": "bytes32"
        }
      ],
      "name": "insert",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        }
      ],
      "name": "isKnownRoot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "levels",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roots",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "zeros",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "97:228:8:-:0;;;1775:34:7;;;-1:-1:-1;;1815:27:7;;;161:95:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;161:95:8;;;;;;;;;1912:11:7;;;1904:59;;;;-1:-1:-1;;;1904:59:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1991:2;1981:7;:12;;;1973:55;;;;;-1:-1:-1;;;1973:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;2038:6;:16;;-1:-1:-1;;2038:16:7;-1:-1:-1;2038:16:7;;;;;2064;;;;-1:-1:-1;;2064:16:7;;;2091:90;2114:7;2110:11;;:1;:11;;;2091:90;;;2162:8;;;;:5;:8::i;:::-;2142:17;;;;;;;:14;:17;;;;;;;;:28;;;;2123:3;2091:90;;;-1:-1:-1;2202:18:7;-1:-1:-1;;2208:11:7;;2202:18;;:5;:18::i;:::-;2191:8;;;:5;:8;;;:29;-1:-1:-1;97:228:8;;-1:-1:-1;;;97:228:8;4640:3612:7;4687:7;4710:6;4706:3539;;-1:-1:-1;4733:66:7;4718:82;;4706:3539;4819:1;4824;4819:6;4815:3430;;;-1:-1:-1;4842:66:7;4827:82;;4815:3430;4928:1;4933;4928:6;4924:3321;;;-1:-1:-1;4951:66:7;4936:82;;4924:3321;5037:1;5042;5037:6;5033:3212;;;-1:-1:-1;5060:66:7;5045:82;;5033:3212;5146:1;5151;5146:6;5142:3103;;;-1:-1:-1;5169:66:7;5154:82;;5142:3103;5255:1;5260;5255:6;5251:2994;;;-1:-1:-1;5278:66:7;5263:82;;5251:2994;5364:1;5369;5364:6;5360:2885;;;-1:-1:-1;5387:66:7;5372:82;;5360:2885;5473:1;5478;5473:6;5469:2776;;;-1:-1:-1;5496:66:7;5481:82;;5469:2776;5582:1;5587;5582:6;5578:2667;;;-1:-1:-1;5605:66:7;5590:82;;5578:2667;5691:1;5696;5691:6;5687:2558;;;-1:-1:-1;5714:66:7;5699:82;;5687:2558;5800:1;5805:2;5800:7;5796:2449;;;-1:-1:-1;5824:66:7;5809:82;;5796:2449;5910:1;5915:2;5910:7;5906:2339;;;-1:-1:-1;5934:66:7;5919:82;;5906:2339;6020:1;6025:2;6020:7;6016:2229;;;-1:-1:-1;6044:66:7;6029:82;;6016:2229;6130:1;6135:2;6130:7;6126:2119;;;-1:-1:-1;6154:66:7;6139:82;;6126:2119;6240:1;6245:2;6240:7;6236:2009;;;-1:-1:-1;6264:66:7;6249:82;;6236:2009;6350:1;6355:2;6350:7;6346:1899;;;-1:-1:-1;6374:66:7;6359:82;;6346:1899;6460:1;6465:2;6460:7;6456:1789;;;-1:-1:-1;6484:66:7;6469:82;;6456:1789;6570:1;6575:2;6570:7;6566:1679;;;-1:-1:-1;6594:66:7;6579:82;;6566:1679;6680:1;6685:2;6680:7;6676:1569;;;-1:-1:-1;6704:66:7;6689:82;;6676:1569;6790:1;6795:2;6790:7;6786:1459;;;-1:-1:-1;6814:66:7;6799:82;;6786:1459;6900:1;6905:2;6900:7;6896:1349;;;-1:-1:-1;6924:66:7;6909:82;;6896:1349;7010:1;7015:2;7010:7;7006:1239;;;-1:-1:-1;7034:66:7;7019:82;;7006:1239;7120:1;7125:2;7120:7;7116:1129;;;-1:-1:-1;7144:66:7;7129:82;;7116:1129;7230:1;7235:2;7230:7;7226:1019;;;-1:-1:-1;7254:66:7;7239:82;;7226:1019;7340:1;7345:2;7340:7;7336:909;;;-1:-1:-1;7364:66:7;7349:82;;7336:909;7450:1;7455:2;7450:7;7446:799;;;-1:-1:-1;7474:66:7;7459:82;;7446:799;7560:1;7565:2;7560:7;7556:689;;;-1:-1:-1;7584:66:7;7569:82;;7556:689;7670:1;7675:2;7670:7;7666:579;;;-1:-1:-1;7694:66:7;7679:82;;7666:579;7780:1;7785:2;7780:7;7776:469;;;-1:-1:-1;7804:66:7;7789:82;;7776:469;7890:1;7895:2;7890:7;7886:359;;;-1:-1:-1;7914:66:7;7899:82;;7886:359;8000:1;8005:2;8000:7;7996:249;;;-1:-1:-1;8024:66:7;8009:82;;7996:249;8110:1;8115:2;8110:7;8106:139;;;-1:-1:-1;8134:66:7;8119:82;;8106:139;8216:29;;;-1:-1:-1;;;8216:29:7;;;;;;;;;;;;-1:-1:-1;;;8216:29:7;;;;;;;;;;;;;;8106:139;4640:3612;;;:::o;97:228:8:-;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063c2b40ae41161008c578063ec73295911610066578063ec732959146101fe578063ed33639f14610206578063f178e47c1461022a578063fc7e9c6f14610247576100ea565b8063c2b40ae4146101bc578063cd87a3b4146101d9578063e8295588146101e1576100ea565b80636d9833e3116100c85780636d9833e3146101495780638ea3099e1461017a57806390eeb02b146101ac578063ba70f757146101b4576100ea565b80632d287e43146100ef578063414a37ba1461010e5780634ecf518b14610128575b600080fd5b61010c6004803603602081101561010557600080fd5b503561024f565b005b61011661025c565b60408051918252519081900360200190f35b61013061026e565b6040805163ffffffff9092168252519081900360200190f35b6101666004803603602081101561015f57600080fd5b503561027a565b604080519115158252519081900360200190f35b6101166004803603606081101561019057600080fd5b506001600160a01b0381351690602081013590604001356102ec565b6101306104b8565b6101166104c4565b610116600480360360208110156101d257600080fd5b50356104df565b6101306104f1565b610116600480360360208110156101f757600080fd5b50356104f6565b610116610b35565b61020e610b59565b604080516001600160a01b039092168252519081900360200190f35b6101166004803603602081101561024057600080fd5b5035610b7d565b610130610b8f565b61025881610ba3565b5050565b600080516020610d3b83398151915281565b60005463ffffffff1681565b600081610289575060006102e7565b60035463ffffffff16805b63ffffffff81166000908152600260205260409020548414156102bc576001925050506102e7565b63ffffffff81166102cb5750601e5b6000190163ffffffff8082169083161415610294576000925050505b919050565b6000600080516020610d3b8339815191528310610350576040805162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64604482015290519081900360640190fd5b600080516020610d3b833981519152821061039c5760405162461bcd60e51b8152600401808060200182810382526021815260200180610d1a6021913960400191505060405180910390fd5b6040805163f47d33b560e01b8152600481018590526000602482018190528251869391926001600160a01b0389169263f47d33b592604480840193829003018186803b1580156103eb57600080fd5b505afa1580156103ff573d6000803e3d6000fd5b505050506040513d604081101561041557600080fd5b5080516020909101519092509050600080516020610d3b8339815191528483089150856001600160a01b031663f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b15801561048257600080fd5b505afa158015610496573d6000803e3d6000fd5b505050506040513d60408110156104ac57600080fd5b50519695505050505050565b60035463ffffffff1681565b60035463ffffffff1660009081526002602052604090205490565b60026020526000908152604090205481565b601e81565b60008161052457507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c6102e7565b816001141561055457507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d6102e7565b816002141561058457507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c2006102e7565b81600314156105b457507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb6102e7565b81600414156105e457507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c96102e7565b816005141561061457507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb549596102e7565b816006141561064457507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c6102e7565b816007141561067457507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb46102e7565b81600814156106a457507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff806102e7565b81600914156106d357507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c0076102e7565b81600a141561070357507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e306102e7565b81600b141561073357507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e56102e7565b81600c141561076357507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f6102e7565b81600d141561079357507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd6102e7565b81600e14156107c357507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb1086102e7565b81600f14156107f357507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b66102e7565b816010141561082357507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db618546102e7565b816011141561085357507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea6102e7565b816012141561088357507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d6102e7565b81601314156108b357507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc056102e7565b81601414156108e357507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d46102e7565b816015141561091357507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b29676102e7565b816016141561094357507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc34536102e7565b816017141561097357507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c486102e7565b81601814156109a357507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd16102e7565b81601914156109d357507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c6102e7565b81601a1415610a0357507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce996102e7565b81601b1415610a3357507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f3546102e7565b81601c1415610a6257507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d6102e7565b81601d1415610a9257507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f4276102e7565b81601e1415610ac257507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb6102e7565b81601f1415610af257507f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc6102e7565b6040805162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b604482015290519081900360640190fd5b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60016020526000908152604090205481565b600354640100000000900463ffffffff1681565b60035460008054909163ffffffff640100000000909104811691811660020a16811415610c015760405162461bcd60e51b8152600401808060200182810382526030815260200180610d5b6030913960400191505060405180910390fd5b8083600080805b60005463ffffffff9081169082161015610cb25760018516610c5557839250610c368163ffffffff166104f6565b63ffffffff821660009081526001602052604090208590559150610c71565b63ffffffff811660009081526001602052604090205492508391505b610c9c7f000000000000000000000000000000000000000000000000000000000000000084846102ec565b9350600263ffffffff8616049450600101610c08565b505060038054601e63ffffffff8083166001908101821692909206811663ffffffff1990931683178455600092835260026020526040909220949094558154938601166401000000000267ffffffff0000000019909316929092179091555090939250505056fe5f72696768742073686f756c6420626520696e7369646520746865206669656c6430644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000014d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c65617665732063616e206265206164646564a26469706673582212205e5b7b961995f6a45308d1229206eb81a83c42e86d8bfef3fa4763a4e84903e064736f6c63430007060033",
    "sourceMap": "97:228:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;260:63;;;;;;;;;;;;;;;;-1:-1:-1;260:63:8;;:::i;:::-;;982:114:7;;;:::i;:::-;;;;;;;;;;;;;;;;1299:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3925:476;;;;;;;;;;;;;;;;-1:-1:-1;3925:476:7;;:::i;:::-;;;;;;;;;;;;;;;;;;2303:528;;;;;;;;;;;;;;;;-1:-1:-1;2303:528:7;;-1:-1:-1;;;;;2303:528:7;;;;;;;;;;;:::i;1775:34::-;;;:::i;4451:100::-;;;:::i;1678:40::-;;;;;;;;;;;;;;;;-1:-1:-1;1678:40:7;;:::i;1724:45::-;;;:::i;4640:3612::-;;;;;;;;;;;;;;;;-1:-1:-1;4640:3612:7;;:::i;1102:114::-;;;:::i;1261:31::-;;;:::i;:::-;;;;-1:-1:-1;;;;;1261:31:7;;;;;;;;;;;;;;1623:49;;;;;;;;;;;;;;;;-1:-1:-1;1623:49:7;;:::i;1815:27::-;;;:::i;260:63:8:-;304:14;312:5;304:7;:14::i;:::-;;260:63;:::o;982:114:7:-;-1:-1:-1;;;;;;;;;;;982:114:7;:::o;1299:20::-;;;;;;:::o;3925:476::-;3982:4;4002:10;3998:53;;-1:-1:-1;4035:5:7;4028:12;;3998:53;4087:16;;;;;4151:222;4181:8;;;;;;;:5;:8;;;;;;4172:17;;4168:67;;;4216:4;4209:11;;;;;;4168:67;4252:6;;;4248:66;;-1:-1:-1;1767:2:7;4248:66;-1:-1:-1;;4327:3:7;4349:22;;;;;;;;;4151:222;;4389:5;4382:12;;;;3925:476;;;;:::o;2303:528::-;2425:7;-1:-1:-1;;;;;;;;;;;2452:27:7;;2444:72;;;;;-1:-1:-1;;;2444:72:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2534:28:7;;2526:74;;;;-1:-1:-1;;;2526:74:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2678:24;;;-1:-1:-1;;;2678:24:7;;;;;;;;-1:-1:-1;2678:24:7;;;;;;;;;;-1:-1:-1;;;;;;;2678:18:7;;;-1:-1:-1;;2678:24:7;;;;;;;;;;:18;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2678:24:7;;;;;;;;;-1:-1:-1;2678:24:7;-1:-1:-1;;;;;;;;;;;;2734:6:7;2723:1;2716:38;2773:24;;;-1:-1:-1;;;2773:24:7;;;;;;;;;;;;;;;;2712:42;;-1:-1:-1;;;;;;2773:18:7;;;;;:24;;;;;;;;;;;;;:18;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2773:24:7;;2303:528;-1:-1:-1;;;;;;2303:528:7:o;1775:34::-;;;;;;:::o;4451:100::-;4527:16;;;;4495:7;4521:23;;;:5;:23;;;;;;4451:100;:::o;1678:40::-;;;;;;;;;;;;;:::o;1724:45::-;1767:2;1724:45;:::o;4640:3612::-;4687:7;4710:6;4706:3539;;-1:-1:-1;4733:66:7;4718:82;;4706:3539;4819:1;4824;4819:6;4815:3430;;;-1:-1:-1;4842:66:7;4827:82;;4815:3430;4928:1;4933;4928:6;4924:3321;;;-1:-1:-1;4951:66:7;4936:82;;4924:3321;5037:1;5042;5037:6;5033:3212;;;-1:-1:-1;5060:66:7;5045:82;;5033:3212;5146:1;5151;5146:6;5142:3103;;;-1:-1:-1;5169:66:7;5154:82;;5142:3103;5255:1;5260;5255:6;5251:2994;;;-1:-1:-1;5278:66:7;5263:82;;5251:2994;5364:1;5369;5364:6;5360:2885;;;-1:-1:-1;5387:66:7;5372:82;;5360:2885;5473:1;5478;5473:6;5469:2776;;;-1:-1:-1;5496:66:7;5481:82;;5469:2776;5582:1;5587;5582:6;5578:2667;;;-1:-1:-1;5605:66:7;5590:82;;5578:2667;5691:1;5696;5691:6;5687:2558;;;-1:-1:-1;5714:66:7;5699:82;;5687:2558;5800:1;5805:2;5800:7;5796:2449;;;-1:-1:-1;5824:66:7;5809:82;;5796:2449;5910:1;5915:2;5910:7;5906:2339;;;-1:-1:-1;5934:66:7;5919:82;;5906:2339;6020:1;6025:2;6020:7;6016:2229;;;-1:-1:-1;6044:66:7;6029:82;;6016:2229;6130:1;6135:2;6130:7;6126:2119;;;-1:-1:-1;6154:66:7;6139:82;;6126:2119;6240:1;6245:2;6240:7;6236:2009;;;-1:-1:-1;6264:66:7;6249:82;;6236:2009;6350:1;6355:2;6350:7;6346:1899;;;-1:-1:-1;6374:66:7;6359:82;;6346:1899;6460:1;6465:2;6460:7;6456:1789;;;-1:-1:-1;6484:66:7;6469:82;;6456:1789;6570:1;6575:2;6570:7;6566:1679;;;-1:-1:-1;6594:66:7;6579:82;;6566:1679;6680:1;6685:2;6680:7;6676:1569;;;-1:-1:-1;6704:66:7;6689:82;;6676:1569;6790:1;6795:2;6790:7;6786:1459;;;-1:-1:-1;6814:66:7;6799:82;;6786:1459;6900:1;6905:2;6900:7;6896:1349;;;-1:-1:-1;6924:66:7;6909:82;;6896:1349;7010:1;7015:2;7010:7;7006:1239;;;-1:-1:-1;7034:66:7;7019:82;;7006:1239;7120:1;7125:2;7120:7;7116:1129;;;-1:-1:-1;7144:66:7;7129:82;;7116:1129;7230:1;7235:2;7230:7;7226:1019;;;-1:-1:-1;7254:66:7;7239:82;;7226:1019;7340:1;7345:2;7340:7;7336:909;;;-1:-1:-1;7364:66:7;7349:82;;7336:909;7450:1;7455:2;7450:7;7446:799;;;-1:-1:-1;7474:66:7;7459:82;;7446:799;7560:1;7565:2;7560:7;7556:689;;;-1:-1:-1;7584:66:7;7569:82;;7556:689;7670:1;7675:2;7670:7;7666:579;;;-1:-1:-1;7694:66:7;7679:82;;7666:579;7780:1;7785:2;7780:7;7776:469;;;-1:-1:-1;7804:66:7;7789:82;;7776:469;7890:1;7895:2;7890:7;7886:359;;;-1:-1:-1;7914:66:7;7899:82;;7886:359;8000:1;8005:2;8000:7;7996:249;;;-1:-1:-1;8024:66:7;8009:82;;7996:249;8110:1;8115:2;8110:7;8106:139;;;-1:-1:-1;8134:66:7;8119:82;;8106:139;8216:29;;;-1:-1:-1;;;8216:29:7;;;;;;;;;;;;-1:-1:-1;;;8216:29:7;;;;;;;;;;;;;;1102:114;1139:77;1102:114;:::o;1261:31::-;;;:::o;1623:49::-;;;;;;;;;;;;;:::o;1815:27::-;;;;;;;;;:::o;2837:1012::-;2931:9;;2887:12;2983:6;;2887:12;;2931:9;;;;;;;;2983:6;;2979:1;2972:17;2958:31;;;;2950:92;;;;-1:-1:-1;;;2950:92:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3074:10;3121:5;3052:19;;;3182:434;3205:6;;;;;;3201:10;;;;3182:434;;;3236:16;;;3232:276;;3284:16;3277:23;;3326:8;3332:1;3326:8;;:5;:8::i;:::-;3352:17;;;;;;;:14;:17;;;;;:36;;;3318:16;-1:-1:-1;3232:276:7;;;3434:17;;;;;;;:14;:17;;;;;;;-1:-1:-1;3477:16:7;;-1:-1:-1;3232:276:7;3540:34;3554:6;3562:4;3568:5;3540:13;:34::i;:::-;3521:53;-1:-1:-1;3604:1:7;3588:17;;;;;-1:-1:-1;3213:3:7;;3182:434;;;-1:-1:-1;;3649:16:7;;;1767:2;3648:42;3649:16;;;;:20;;;3648:42;;;;;;3700:31;;-1:-1:-1;;3700:31:7;;;;;;;-1:-1:-1;3741:19:7;;;:5;:19;;;;;;:38;;;;3789:26;;3801:14;;;3789:26;;;-1:-1:-1;;3789:26:7;;;;;;;;;;-1:-1:-1;3801:14:7;;;-1:-1:-1;;;2837:1012:7:o",
    "linkReferences": {},
    "immutableReferences": {
      "23157": [
        {
          "start": 2907,
          "length": 32
        },
        {
          "start": 3190,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "FIELD_SIZE()": "414a37ba",
    "ROOT_HISTORY_SIZE()": "cd87a3b4",
    "ZERO_VALUE()": "ec732959",
    "currentRootIndex()": "90eeb02b",
    "filledSubtrees(uint256)": "f178e47c",
    "getLastRoot()": "ba70f757",
    "hashLeftRight(address,bytes32,bytes32)": "8ea3099e",
    "hasher()": "ed33639f",
    "insert(bytes32)": "2d287e43",
    "isKnownRoot(bytes32)": "6d9833e3",
    "levels()": "4ecf518b",
    "nextIndex()": "fc7e9c6f",
    "roots(uint256)": "c2b40ae4",
    "zeros(uint256)": "e8295588"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_treeLevels\",\"type\":\"uint32\"},{\"internalType\":\"contract IHasher\",\"name\":\"_hasher\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FIELD_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT_HISTORY_SIZE\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZERO_VALUE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRootIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"filledSubtrees\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IHasher\",\"name\":\"_hasher\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_right\",\"type\":\"bytes32\"}],\"name\":\"hashLeftRight\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasher\",\"outputs\":[{\"internalType\":\"contract IHasher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_leaf\",\"type\":\"bytes32\"}],\"name\":\"insert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"}],\"name\":\"isKnownRoot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"levels\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"zeros\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getLastRoot()\":{\"details\":\"Returns the last root\"},\"hashLeftRight(address,bytes32,bytes32)\":{\"details\":\"Hash 2 tree leaves, returns MiMC(_left, _right)\"},\"isKnownRoot(bytes32)\":{\"details\":\"Whether the root is present in the root history\"},\"zeros(uint256)\":{\"details\":\"provides Zero (Empty) elements for a MiMC MerkleTree. Up to 32 levels\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/tornado-core/contracts/Mocks/MerkleTreeWithHistoryMock.sol\":\"MerkleTreeWithHistoryMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":tornado-core/=lib/tornado-core/contracts/\"]},\"sources\":{\"lib/tornado-core/contracts/MerkleTreeWithHistory.sol\":{\"keccak256\":\"0x0f93f0c0eb5fb955dbc5dd631987498d3bc4a38e88290b24919e2182ba681bb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2892acda30d2fa76cf6a594ab49b415cf6efd83b702386a630f213a676b567a\",\"dweb:/ipfs/QmUjF4raiyWBSKG7pf5y2SEMy6TJ8Rpnj5ti5JSYnHD1R2\"]},\"lib/tornado-core/contracts/Mocks/MerkleTreeWithHistoryMock.sol\":{\"keccak256\":\"0x7a07cd2eb7531ae3977bc46b7392cef73d323478c0119ab2c4561325d46b9d31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd29860549b60580bcaae0612bc341c5c0a423f199e24eefe1bc54037367ddb9\",\"dweb:/ipfs/QmVU6W8JRd6EATrgt6gHeDoU2hwDv1NGsfv34JrEpdnEGv\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.7.6+commit.7338295f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_treeLevels",
              "type": "uint32"
            },
            {
              "internalType": "contract IHasher",
              "name": "_hasher",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FIELD_SIZE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ROOT_HISTORY_SIZE",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ZERO_VALUE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "currentRootIndex",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "filledSubtrees",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLastRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IHasher",
              "name": "_hasher",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_left",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "_right",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "hashLeftRight",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "hasher",
          "outputs": [
            {
              "internalType": "contract IHasher",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_leaf",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "insert"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_root",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isKnownRoot",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "levels",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextIndex",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "roots",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "i",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "zeros",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getLastRoot()": {
            "details": "Returns the last root"
          },
          "hashLeftRight(address,bytes32,bytes32)": {
            "details": "Hash 2 tree leaves, returns MiMC(_left, _right)"
          },
          "isKnownRoot(bytes32)": {
            "details": "Whether the root is present in the root history"
          },
          "zeros(uint256)": {
            "details": "provides Zero (Empty) elements for a MiMC MerkleTree. Up to 32 levels"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":tornado-core/=lib/tornado-core/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/tornado-core/contracts/Mocks/MerkleTreeWithHistoryMock.sol": "MerkleTreeWithHistoryMock"
      },
      "libraries": {}
    },
    "sources": {
      "lib/tornado-core/contracts/MerkleTreeWithHistory.sol": {
        "keccak256": "0x0f93f0c0eb5fb955dbc5dd631987498d3bc4a38e88290b24919e2182ba681bb7",
        "urls": [
          "bzz-raw://c2892acda30d2fa76cf6a594ab49b415cf6efd83b702386a630f213a676b567a",
          "dweb:/ipfs/QmUjF4raiyWBSKG7pf5y2SEMy6TJ8Rpnj5ti5JSYnHD1R2"
        ],
        "license": "MIT"
      },
      "lib/tornado-core/contracts/Mocks/MerkleTreeWithHistoryMock.sol": {
        "keccak256": "0x7a07cd2eb7531ae3977bc46b7392cef73d323478c0119ab2c4561325d46b9d31",
        "urls": [
          "bzz-raw://dd29860549b60580bcaae0612bc341c5c0a423f199e24eefe1bc54037367ddb9",
          "dweb:/ipfs/QmVU6W8JRd6EATrgt6gHeDoU2hwDv1NGsfv34JrEpdnEGv"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/tornado-core/contracts/Mocks/MerkleTreeWithHistoryMock.sol",
    "id": 23833,
    "exportedSymbols": {
      "IHasher": [
        23149
      ],
      "MerkleTreeWithHistory": [
        23804
      ],
      "MerkleTreeWithHistoryMock": [
        23832
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:294:8",
    "nodes": [
      {
        "id": 23806,
        "nodeType": "PragmaDirective",
        "src": "32:23:8",
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ]
      },
      {
        "id": 23807,
        "nodeType": "ImportDirective",
        "src": "57:38:8",
        "absolutePath": "lib/tornado-core/contracts/MerkleTreeWithHistory.sol",
        "file": "../MerkleTreeWithHistory.sol",
        "scope": 23833,
        "sourceUnit": 23805,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 23832,
        "nodeType": "ContractDefinition",
        "src": "97:228:8",
        "nodes": [
          {
            "id": 23821,
            "nodeType": "FunctionDefinition",
            "src": "161:95:8",
            "body": {
              "id": 23820,
              "nodeType": "Block",
              "src": "254:2:8",
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 23816,
                    "name": "_treeLevels",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23811,
                    "src": "232:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  {
                    "id": 23817,
                    "name": "_hasher",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23813,
                    "src": "245:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHasher_$23149",
                      "typeString": "contract IHasher"
                    }
                  }
                ],
                "id": 23818,
                "modifierName": {
                  "id": 23815,
                  "name": "MerkleTreeWithHistory",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 23804,
                  "src": "210:21:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MerkleTreeWithHistory_$23804_$",
                    "typeString": "type(contract MerkleTreeWithHistory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "210:43:8"
              }
            ],
            "name": "",
            "parameters": {
              "id": 23814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23811,
                  "mutability": "mutable",
                  "name": "_treeLevels",
                  "nodeType": "VariableDeclaration",
                  "scope": 23821,
                  "src": "173:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 23810,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "173:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23813,
                  "mutability": "mutable",
                  "name": "_hasher",
                  "nodeType": "VariableDeclaration",
                  "scope": 23821,
                  "src": "193:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IHasher_$23149",
                    "typeString": "contract IHasher"
                  },
                  "typeName": {
                    "id": 23812,
                    "name": "IHasher",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 23149,
                    "src": "193:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHasher_$23149",
                      "typeString": "contract IHasher"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "172:37:8"
            },
            "returnParameters": {
              "id": 23819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "254:0:8"
            },
            "scope": 23832,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 23831,
            "nodeType": "FunctionDefinition",
            "src": "260:63:8",
            "body": {
              "id": 23830,
              "nodeType": "Block",
              "src": "298:25:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23827,
                        "name": "_leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23823,
                        "src": "312:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 23826,
                      "name": "_insert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23439,
                      "src": "304:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$_t_uint32_$",
                        "typeString": "function (bytes32) returns (uint32)"
                      }
                    },
                    "id": 23828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "304:14:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 23829,
                  "nodeType": "ExpressionStatement",
                  "src": "304:14:8"
                }
              ]
            },
            "functionSelector": "2d287e43",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "insert",
            "parameters": {
              "id": 23824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23823,
                  "mutability": "mutable",
                  "name": "_leaf",
                  "nodeType": "VariableDeclaration",
                  "scope": 23831,
                  "src": "276:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 23822,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "276:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "275:15:8"
            },
            "returnParameters": {
              "id": 23825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "298:0:8"
            },
            "scope": 23832,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 23808,
              "name": "MerkleTreeWithHistory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23804,
              "src": "135:21:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MerkleTreeWithHistory_$23804",
                "typeString": "contract MerkleTreeWithHistory"
              }
            },
            "id": 23809,
            "nodeType": "InheritanceSpecifier",
            "src": "135:21:8"
          }
        ],
        "contractDependencies": [
          23804
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          23832,
          23804
        ],
        "name": "MerkleTreeWithHistoryMock",
        "scope": 23833
      }
    ],
    "license": "MIT"
  },
  "id": 8
}